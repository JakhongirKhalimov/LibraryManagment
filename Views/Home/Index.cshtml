@model PaginatedList<LibraryManagementSystem.ViewModels.BookViewModels.BookViewModel>

@{
    ViewData["Title"] = "Home";
}

@{
    var sortBy = ViewData["sortBy"] as int?;
    var ascSelected = (sortBy.HasValue && sortBy == 1) ? "selected" : "";
    var descSelected = (sortBy.HasValue && sortBy == 2) ? "selected" : "";
}

<div class="row">
    <div class="col-sm-6">
    </div>
    <div class="col-sm-6 mb-2">
        <form class="filter-form" asp-controller="Home" asp-action="Index" method="get">
            <div class="input-group">
                <input type="text" class="form-control" name="searchQuery" placeholder="Search" value="@ViewData["searchQuery"]">
                <select class="custom-select" name="sortBy">
                    <option value="0">SortBy</option>
                    @if (sortBy.HasValue && sortBy == 1)
                    {
                        <option value="1" selected>ASC</option>
                        <option value="2">DESC</option>
                    }
                    else if (sortBy.HasValue && sortBy == 2)
                    {
                        <option value="1">ASC</option>
                        <option value="2" selected>DESC</option>
                    }
                    else
                    {
                        <option value="1">ASC</option>
                        <option value="2">DESC</option>
                    }
                </select>
                <button class="btn btn-dark" type="submit">Filter</button>
            </div>
        </form>
    </div>
</div>

<div class="container mb-3 mt-3">
    <div class="row">
        @foreach (var book in Model)
        {
            <div class="col-md-3 mb-4">
                <div class="card mb-3 p-2 shadow-sm h-100">
                    <img class="card-img-top align-self-center" src="@book.Image" alt="Book cover" style="max-height: 200px; object-fit: contain; background-image:url(@book.Image); background-repeat: no-repeat; background-size:cover; background-blend-mode: multiply; background-position: center; background-color: #000000af;">
                    <div class="card-body d-flex flex-column">
                        <h5 class="card-title text-center">@book.Title</h5>
                        <p class="card-text text-center">by @book.Author</p>
                        <div class="m-auto text-center">
                            <a asp-controller="Home" asp-action="Details" asp-route-id="@book.Id" class="btn btn-success">Details</a>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
</div>

@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

@if (Model.HasPreviousPage || Model.HasNextPage)
{
    <a asp-action="Index"
       asp-route-sortBy="@ViewData["sortBy"]"
       asp-route-searchQuery="@ViewData["searchQuery"]"
       asp-route-pageNumber="@(Model.PageIndex - 1)"
       class="btn btn-dark @prevDisabled">
        Previous
    </a>

    <a asp-action="Index"
       asp-route-sortBy="@ViewData["sortBy"]"
       asp-route-searchQuery="@ViewData["searchQuery"]"
       asp-route-pageNumber="@(Model.PageIndex + 1)"
       class="btn btn-dark @nextDisabled">
        Next
    </a>
}


@if (ViewData["ValidationMessage"] != null)
{
    <br />
    <div class="validation-message">@ViewData["ValidationMessage"]</div>
}